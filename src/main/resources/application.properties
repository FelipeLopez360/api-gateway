spring.application.name=api-gateway

# Enable the Discovery Locator for Spring Cloud Gateway
spring.cloud.gateway.discovery.locator.enabled=true

# Set the Eureka instance ID using the application name and a random UUID
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# Disable Ribbon load balancer as Spring Cloud LoadBalancer is used
spring.cloud.loadbalancer.ribbon.enabled=false

# Define a route for the product microservice
spring.cloud.gateway.routes[0].id=product-microservice
# Use load-balanced URI for the product microservice
spring.cloud.gateway.routes[0].uri=lb://PRODUCT-MICROSERVICE
# Set path predicates for the product microservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**, /api/categories/**


# Define a route for the booking microservice
spring.cloud.gateway.routes[1].id=booking-microservice
# Use load-balanced URI for the booking microservice
spring.cloud.gateway.routes[1].uri=lb://BOOKING-MICROSERVICE
# Set path predicates for the booking microservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/bookings/**

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/mycompany-microservices-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=LGwYCTVj661qYjSFLNPfSZotT7EvhWxe
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-cloud-gateway-client